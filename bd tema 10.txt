--ex 18

CREATE VIEW viz_emp_gma (
    employee_id,
    first_name,
    last_name,
    email UNIQUE DISABLE NOVALIDATE,
    phone_number,
    CONSTRAINT pk_viz_emp_gma PRIMARY KEY (employee_id) DISABLE NOVALIDATE
) AS
    SELECT employee_id, first_name, last_name, email, phone_number
    FROM employees;

SELECT * FROM viz_emp_gma;


--ex 19

ALTER VIEW viz_emp_s_gma
ADD PRIMARY KEY (cod_ang) DISABLE NOVALIDATE;


--ex 20

CREATE SEQUENCE seq_dept_gma
START WITH 200
INCREMENT BY 10
MAXVALUE 10000
NOCYCLE NOCACHE;


--ex 21

SELECT * FROM user_sequences;


--ex 22

CREATE SEQUENCE seq_emp_gma;


--ex 23

DROP TABLE emp_gma;
CREATE TABLE emp_gma AS (SELECT * FROM employees);

UPDATE emp_gma
SET employee_id = seq_emp_gma.nextval;

SELECT * FROM emp_gma;


--ex 24

INSERT INTO emp_gma
VALUES (
    seq_emp_gma.nextval,
    'Ion', 'Popescu',
    'email',
    null,
    '10-JUN-2000',
    'FI_ACCOUNT',
    5000,
    null,
    null,
    100
);

INSERT INTO dept_gma
VALUES (seq_dept_gma.nextval, 'Department', null, 3000);


--ex 25

SELECT seq_emp_gma.currval FROM dual;
SELECT seq_dept_gma.currval FROM dual;


--ex 26

DROP SEQUENCE seq_dept_gma;


--ex 27

CREATE INDEX idx_emp_last_name_gma
    ON emp_gma (last_name);


--ex 28

CREATE UNIQUE INDEX idx_emp_id_gma
    ON emp_gma (employee_id);

ALTER TABLE emp_gma
ADD PRIMARY KEY (employee_id)
ADD UNIQUE (last_name, first_name, hire_date);


--ex 29

CREATE INDEX idx_dept_id_gma
    ON emp_gma (department_id);


--ex 30

CREATE INDEX idx_dept_name_gma
    ON dept_gma (UPPER(department_name));

CREATE INDEX idx_emp_name_gma
    ON emp_gma (LOWER(last_name));


--ex 31

SELECT index_name, column_name, column_position, uniqueness
FROM user_indexes
INNER JOIN user_ind_columns
USING (index_name)
WHERE LOWER(user_indexes.table_name) IN ('emp_gma', 'dept_gma');


--ex 32

DROP INDEX idx_emp_last_name_gma;


--ex 33

CREATE CLUSTER angajati_gma (angajat NUMBER(6))
SIZE 512
STORAGE (initial 100 next 50);


--ex 34

CREATE INDEX idx_angajati_gma ON CLUSTER angajati_gma;


--ex 35

CREATE TABLE ang_1_gma
CLUSTER angajati_gma(employee_id)
AS SELECT * FROM employees WHERE salary < 5000;

CREATE TABLE ang_2_gma
CLUSTER angajati_gma(employee_id)
AS SELECT * FROM employees WHERE 5000 <= salary AND salary < 10000;

CREATE TABLE ang_3_gma
CLUSTER angajati_gma(employee_id)
AS SELECT * FROM employees WHERE salary >= 10000;


--ex 36

SELECT * FROM user_clusters;


--ex 37

SELECT cluster_name
FROM user_tables
WHERE LOWER(table_name) = 'ang_3_gma';


--ex 38

DROP TABLE ang_3_gma;


--ex 39

SELECT * FROM user_tables
WHERE LOWER(table_name) = 'ang_3_gma';


--ex 40

DROP TABLE ang_2_gma;

SELECT * FROM user_tables
WHERE LOWER(cluster_name) = 'angajati_gma';


--ex 41

DROP CLUSTER angajati_gma
INCLUDING TABLES
CASCADE CONSTRAINTS;


--ex 42

CREATE PUBLIC SYNONYM emp_public_gma FOR emp_gma;


--ex 43

CREATE SYNONYM v30_gma FOR viz_emp30_gma;


--ex 44

CREATE SYNONYM dept_syn_gma FOR dept_gma;

SELECT * FROM dept_syn_gma;

RENAME dept_gma TO dept_redenumit_gma;

RENAME dept_redenumit_gma TO dept_gma;


--ex 45

SELECT * FROM user_synonyms
WHERE LOWER(synonym_name) LIKE '%gma';

DROP SYNONYM v30_gma;
DROP SYNONYM dept_syn_gma;


--ex 46

CREATE MATERIALIZED VIEW job_dep_sal_gma
BUILD IMMEDIATE
REFRESH COMPLETE
ENABLE QUERY REWRITE
AS SELECT d.department_name, j.job_title, SUM(salary) AS suma_salarii
FROM employees e
INNER JOIN departments d
ON e.department_id = d.department_id
INNER JOIN jobs j
ON e.job_id = j.job_id
GROUP BY d.department_name, j.job_title;


--ex 47

CREATE TABLE job_dep_gma (
    job VARCHAR2 (10),
    dep NUMBER (4),
    suma_salarii NUMBER(9, 2)
);

CREATE MATERIALIZED VIEW job_dep_gma
ON PREBUILT TABLE WITH REDUCED PRECISION
ENABLE QUERY REWRITE AS (
    SELECT j.job_title, d.department_id, SUM(salary) AS suma_salarii
    FROM employees e
    INNER JOIN departments d
    ON e.department_id = d.department_id
    INNER JOIN jobs j
    ON e.job_id = j.job_id
    GROUP BY d.department_id, j.job_title
);


--ex 48

CREATE MATERIALIZED VIEW LOG ON dept_gma;

CREATE MATERIALIZED VIEW dep_vm_gma
REFRESH FAST START WITH SYSDATE NEXT SYSDATE + 1/288
WITH PRIMARY KEY
AS SELECT * FROM dept_gma;


--ex 49

ALTER MATERIALIZED VIEW job_dep_sal_gma
REFRESH FAST NEXT SYSDATE + 7 DISABLE QUERY REWRITE;


--ex 50

DROP MATERIALIZED VIEW dep_vm_gma;
DROP MATERIALIZED VIEW job_dep_sal_gma;