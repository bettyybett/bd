--ex 6
SELECT employee_id, first_name, last_name, project_id, project_name
FROM employees
LEFT OUTER JOIN works_on
USING (employee_id)
LEFT OUTER JOIN projects
USING (project_id);


--ex 7

WITH project_managers AS (
    SELECT DISTINCT project_manager AS employee_id
    FROM projects
)
SELECT first_name, last_name, department_id
FROM employees
WHERE department_id IN (
    SELECT DISTINCT department_id
    FROM departments
    INNER JOIN employees
    USING (department_id)
    INNER JOIN project_managers
    USING (employee_id)
);


--ex 8

WITH project_managers AS (
    SELECT DISTINCT project_manager AS employee_id
    FROM projects
)
SELECT first_name, last_name, department_id
FROM employees
WHERE department_id NOT IN (
    SELECT DISTINCT department_id
    FROM departments
    INNER JOIN employees
    USING (department_id)
    INNER JOIN project_managers
    USING (employee_id)
);

--ex 9

SELECT department_id
FROM employees
GROUP BY department_id
HAVING AVG(salary) > &p;


--ex 10

WITH project_managers AS (
    SELECT
        project_manager AS employee_id,
        COUNT(1) AS project_count
    FROM projects
    GROUP BY project_manager
)
SELECT first_name, last_name, salary, project_count
FROM employees
INNER JOIN project_managers
USING (employee_id)
WHERE project_count >= 2;


--ex 11

SELECT DISTINCT employee_id
FROM works_on w1
WHERE NOT EXISTS (
    SELECT 1
    FROM projects p
    WHERE project_manager = 102 AND
    NOT EXISTS (
        SELECT 1
        FROM works_on w2
        WHERE w1.employee_id = w2.employee_id
            AND p.project_id = w2.project_id
    )
);


--ex 12a

WITH employee_200_projects AS (
    SELECT project_id
    FROM works_on
    WHERE employee_id = 200
)
SELECT DISTINCT last_name
FROM employees e
WHERE NOT EXISTS (
    SELECT 1
    FROM employee_200_projects
    WHERE project_id NOT IN (
        SELECT project_id
        FROM works_on
        WHERE employee_id = e.employee_id
    )
);

--ex 12b

WITH employee_200_projects AS (
    SELECT project_id
    FROM works_on
    WHERE employee_id = 200
)
SELECT DISTINCT e.last_name
FROM employees e
WHERE NOT EXISTS (
    SELECT project_id
    FROM works_on
    WHERE (employee_id = e.employee_id)
        AND project_id NOT IN (
            SELECT *
            FROM employee_200_projects
        )
);


-- ex13

WITH employee_200_projects AS (
    SELECT project_id
    FROM works_on
    WHERE employee_id = 200
)
SELECT e.employee_id, e.last_name
FROM employees e
WHERE NOT EXISTS (
    (
        SELECT project_id
        FROM works_on
        WHERE employee_id = e.employee_id
    )
    MINUS
    (
        SELECT project_id
        FROM employee_200_projects
    )
)
AND NOT EXISTS (
    (
        SELECT project_id
        FROM employee_200_projects
    )
    MINUS
    (
        SELECT project_id
        FROM works_on
        WHERE employee_id = e.employee_id
    )
);


-- ex 14

SELECT *
FROM job_grades;

SELECT last_name, first_name, salary, grade_level
FROM employees
INNER JOIN job_grades
ON ((lowest_sal <= salary) AND (salary <= highest_sal));


-- ex 15

SELECT employee_id, last_name, salary, department_id
FROM employees
WHERE employee_id = &cod_angajat;


--ex 16 

SELECT last_name, department_id, salary
FROM employees
WHERE job_id = &job_ales;

--ex 18

SELECT &&coloana
FROM &&tabel
WHERE &&conditie
ORDER BY &coloana;


--ex 19

ACCEPT data1 PROMPT "data start = ";
ACCEPT data2 PROMPT "data sfarsit = ";
SELECT last_name || ' ' || job_id AS Angajati, hire_date
FROM employees
WHERE (&data1 <= hire_date) AND (hire_date <= &data2);


--ex 20

SELECT last_name, job_id, salary, department_name
FROM employees
INNER JOIN departments
USING (department_id)
INNER JOIN locations
USING (location_id)
WHERE city LIKE &locatie;